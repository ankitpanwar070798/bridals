# Generated by Django 4.2 on 2024-12-09 10:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the tag', max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Carousel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('carousel_type', models.CharField(blank=True, choices=[('_90_DAYS_JOURNEY', '90 DAYS JOURNEY'), ('MAGICAL_MAKEOVER', 'MAGICAL MAKEOVER'), ('SERVICES_BANNER', 'SERVICES BANNER'), ('MAKEUP_VARIATIONS', 'MAKEUP VARIATIONS'), ('TOP_MAKEUP_ARTISTS', 'TOP MAKEUP ARTISTS'), ('SPECIALTY_MAKEUP_ARTISTS', 'SPECIALTY MAKEUP ARTISTS'), ('CLIENT_TESTIMONIALS', 'CLIENT TESTIMONIALS'), ('BRAND_PARTNERS', 'BRAND PARTNERS')], help_text='Type of carousel', max_length=200, null=True)),
                ('title', models.CharField(blank=True, help_text='Carousel Name', max_length=100, null=True, verbose_name='Title/Name')),
                ('sub_title', models.CharField(blank=True, help_text='Carousel subtext', max_length=60, null=True)),
                ('description', models.TextField(blank=True, help_text='Carousel Description', max_length=1000, null=True)),
                ('date_of_birth', models.DateField(blank=True, help_text='date of birth of the Artist/Person', null=True)),
                ('specialised_style', models.CharField(blank=True, help_text='Style Speciality', max_length=60, null=True)),
                ('designation', models.CharField(blank=True, help_text="Client's Designation", max_length=50, null=True)),
                ('is_travels_to_venue', models.BooleanField(default=True, help_text='Artist availability for travel')),
                ('years_of_exp', models.PositiveIntegerField(default=0, help_text="Artist's Years of Experience", verbose_name='Total Years of Experience')),
                ('projects_completed', models.PositiveIntegerField(default=0, help_text='Total Projects Completed by Artist')),
                ('celebrity_projects', models.PositiveIntegerField(default=0, help_text='Total Celebrity Projects Completed by Artist')),
                ('rating', models.PositiveIntegerField(blank=True, help_text='Rating Number', null=True)),
                ('featured_image', models.ImageField(blank=True, help_text='Carousel background image', null=True, upload_to='Carousel/featured_images')),
                ('icon_image', models.ImageField(blank=True, help_text='Carousel Icon image', null=True, upload_to='Carousel/icon_images')),
                ('mobile_image', models.ImageField(blank=True, help_text='Upload Image for Mobile', null=True, upload_to='Carouse/mobile_images')),
                ('desktop_image', models.ImageField(blank=True, help_text='Upload Image for Desktop', null=True, upload_to='Carouse/desktop_images')),
                ('before_mobile_image', models.ImageField(blank=True, help_text='Upload Mobile Image for before Makeup', null=True, upload_to='Carouse/Magical_Makeover/mobile_images')),
                ('before_desktop_image', models.ImageField(blank=True, help_text='Upload Desktop Image for before Makeup', null=True, upload_to='Carouse/Magical_Makeover/desktop_images')),
                ('after_mobile_image', models.ImageField(blank=True, help_text='Upload Mobile Image for after Makeup', null=True, upload_to='Carouse/Magical_Makeover/mobile_images')),
                ('after_desktop_image', models.ImageField(blank=True, help_text='Upload Desktop Image for after Makeup', null=True, upload_to='Carouse/Magical_Makeover/desktop_images')),
                ('hosted_video', models.FileField(blank=True, help_text='Video upload file', max_length=200, null=True, upload_to='Carousel/videos')),
                ('provider', models.CharField(blank=True, choices=[('YOUTUBE', 'YOUTUBE'), ('FACEBOOK', 'FACEBOOK'), ('INSTAGRAM', 'INSTAGRAM'), ('VIMEO', 'VIMEO')], help_text='Video provider name', max_length=100, null=True)),
                ('provider_url', models.URLField(blank=True, help_text='Video URL', max_length=300, null=True)),
                ('redirect_url', models.URLField(blank=True, help_text='used for Redirect URL', max_length=300, null=True)),
                ('sort_order', models.PositiveIntegerField(blank=True, help_text='The Sort Order for the Carousel', null=True, unique=True)),
                ('published_at', models.DateField(blank=True, help_text='Carousel Published date', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Carousel Status')),
                ('is_featured', models.BooleanField(default=False, help_text='Featured Carousel')),
                ('tags', models.ManyToManyField(blank=True, help_text='Tags associated with the carousel', related_name='carousels', to='carousel.tag')),
            ],
            options={
                'verbose_name_plural': 'Carousels',
                'ordering': ('sort_order',),
                'unique_together': {('carousel_type', 'sort_order')},
            },
        ),
        migrations.CreateModel(
            name='CarouselItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand_name', models.CharField(blank=True, help_text='Provide Brand Name', max_length=100, null=True)),
                ('mobile_image', models.ImageField(blank=True, help_text='Hover/Carousel Mobile Image', null=True, upload_to='Carousel/pics', verbose_name='Carousel Item Mobile Image')),
                ('desktop_image', models.ImageField(blank=True, help_text='Hover/Carousel Desktop Image', null=True, upload_to='Carousel/pics', verbose_name='Carousel Item Desktop Image')),
                ('portfolio_mobile_image', models.ImageField(blank=True, help_text='Hover/Portfolio Carousel Mobile Image', null=True, upload_to='Carousel/portfolio/pics', verbose_name='Portfolio Carousel Item Mobile Image')),
                ('portfolio_desktop_image', models.ImageField(blank=True, help_text='Hover/Portfolio Carousel Desktop Image', null=True, upload_to='Carousel/portfolio/pics', verbose_name='Portfolio Carousel Item Desktop Image')),
                ('hosted_video', models.FileField(blank=True, help_text='Video upload file', max_length=200, null=True, upload_to='Carousel/videos')),
                ('provider', models.CharField(blank=True, choices=[('YOUTUBE', 'YOUTUBE'), ('FACEBOOK', 'FACEBOOK'), ('INSTAGRAM', 'INSTAGRAM'), ('VIMEO', 'VIMEO')], help_text='Video provider name', max_length=100, null=True)),
                ('provider_url', models.URLField(blank=True, help_text='Video URL', max_length=300, null=True)),
                ('sort_order', models.PositiveIntegerField(blank=True, help_text='The Sort Order for the Carousel Item', null=True)),
                ('carousel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carousel_items', to='carousel.carousel')),
            ],
            options={
                'verbose_name_plural': 'Carousel Images',
                'ordering': ('-id',),
                'unique_together': {('carousel', 'sort_order')},
            },
        ),
    ]
